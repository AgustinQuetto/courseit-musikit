{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport App from \"next/app\";\nimport Menu from \"../components/menu\";\nimport Container from \"../components/Container\";\nimport Footer from \"../components/footer\";\nimport AccessToken from \"../components/AccessToken\";\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport { Provider } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport withReduxStore from \"../with-redux-store\";\nimport queryString from \"query-string\";\nimport \"../styles/_app.scss\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport config from \"../config\";\n\nvar CustomApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(CustomApp, _App);\n\n  _createClass(CustomApp, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var ctx, res, spotifyAuth, query, host, authed, accessToken, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                ctx = _ref.ctx;\n                res = ctx.res ? ctx.res : false;\n                spotifyAuth = res.spotifyAuth || config.spotifyAuth;\n                query = res.req ? res.req.query : {};\n                host = res.req ? res.req.headers.host : \"\";\n                authed = false;\n                accessToken = {};\n\n                if (!(query.code && host)) {\n                  _context.next = 18;\n                  break;\n                }\n\n                _context.prev = 8;\n                _context.next = 11;\n                return axios.post(\"http://\".concat(host, \"/spotify/auth?\").concat(queryString.stringify(query)));\n\n              case 11:\n                response = _context.sent;\n\n                if (response.status == 200 && response.data) {\n                  authed = true;\n                  accessToken = response.data;\n                }\n\n                _context.next = 18;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](8);\n                console.log(_context.t0);\n\n              case 18:\n                return _context.abrupt(\"return\", {\n                  query: query,\n                  spotifyAuth: spotifyAuth,\n                  authed: authed,\n                  at: accessToken\n                });\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[8, 15]]);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function CustomApp(props) {\n    var _this;\n\n    _classCallCheck(this, CustomApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomApp).call(this, props));\n    _this.state = {\n      enabled: false\n    };\n    return _this;\n  }\n\n  _createClass(CustomApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Router.replace(location.pathname);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          reduxStore = _this$props.reduxStore,\n          at = _this$props.at;\n      var enabled = !!_.get(reduxStore.getState(), \"Spotify.access_token.access_token\");\n      return __jsx(Provider, {\n        store: reduxStore\n      }, __jsx(Head, {\n        key: \"head\"\n      }, __jsx(\"title\", null, \"Musikit\")), enabled ? __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"flex-container\"\n      }, __jsx(Menu, null), __jsx(Container, null, __jsx(Component, pageProps))), __jsx(Footer, null)) : at ? __jsx(AccessToken, {\n        at: at\n      }) : null);\n    }\n  }]);\n\n  return CustomApp;\n}(App);\n\nexport default withReduxStore(CustomApp);","map":{"version":3,"sources":["/Users/agustinquetto/Documents/GitHub/courseit-musikit/pages/_app.js"],"names":["React","App","Menu","Container","Footer","AccessToken","Head","Router","Provider","connect","withReduxStore","queryString","_","axios","config","CustomApp","ctx","res","spotifyAuth","query","req","host","headers","authed","accessToken","code","post","stringify","response","status","data","console","log","at","props","state","enabled","replace","location","pathname","Component","pageProps","reduxStore","get","getState"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport App from \"next/app\";\nimport Menu from \"../components/menu\";\nimport Container from \"../components/Container\";\nimport Footer from \"../components/footer\";\nimport AccessToken from \"../components/AccessToken\";\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport { Provider } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport withReduxStore from \"../with-redux-store\";\nimport queryString from \"query-string\";\n\nimport \"../styles/_app.scss\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport config from \"../config\";\n\nclass CustomApp extends App {\n    static async getInitialProps({ ctx }) {\n        const res = ctx.res ? ctx.res : false;\n        const spotifyAuth = res.spotifyAuth || config.spotifyAuth;\n        const query = res.req ? res.req.query : {};\n        const host = res.req ? res.req.headers.host : \"\";\n\n        let authed = false;\n        let accessToken = {};\n        if (query.code && host) {\n            try {\n                const response = await axios.post(\n                    `http://${host}/spotify/auth?${queryString.stringify(\n                        query\n                    )}`\n                );\n                if (response.status == 200 && response.data) {\n                    authed = true;\n                    accessToken = response.data;\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n\n        return { query, spotifyAuth, authed: authed, at: accessToken };\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            enabled: false\n        };\n    }\n\n    componentDidMount() {\n        Router.replace(location.pathname);\n    }\n\n    render() {\n        const { Component, pageProps, reduxStore, at } = this.props;\n        const enabled = !!_.get(\n            reduxStore.getState(),\n            \"Spotify.access_token.access_token\"\n        );\n        return (\n            <Provider store={reduxStore}>\n                <Head key=\"head\">\n                    <title>Musikit</title>\n                </Head>\n                {enabled ? (\n                    <React.Fragment>\n                        <div className=\"flex-container\">\n                            <Menu />\n                            <Container>\n                                <Component {...pageProps} />\n                            </Container>\n                        </div>\n                        <Footer />\n                    </React.Fragment>\n                ) : at ? (\n                    <AccessToken at={at} />\n                ) : null}\n            </Provider>\n        );\n    }\n}\n\nexport default withReduxStore(CustomApp);\n"]},"metadata":{},"sourceType":"module"}