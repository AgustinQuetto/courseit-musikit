{"ast":null,"code":"import axios from \"axios\";\nimport config from \"../config\";\nimport Cookies from \"js-cookie\";\nexport const Auth = data => dispatch => {\n  return dispatch({\n    type: \"Auth\",\n    value: data\n  });\n};\nexport const AccessToken = () => async dispatch => {\n  const response = await axios.post(location.href + \"spotify/auth\");\n  Cookies.remove(\"code\");\n  return dispatch({\n    type: \"AccessToken\",\n    value: response.data\n  });\n};\nexport const UserMe = data => async dispatch => {\n  return dispatch({\n    type: \"UserMe\",\n    value: response\n  });\n};","map":{"version":3,"sources":["/Users/agustinquetto/Documents/GitHub/courseit-musikit/actions/Spotify.js"],"names":["axios","config","Cookies","Auth","data","dispatch","type","value","AccessToken","response","post","location","href","remove","UserMe"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,IAAI,GAAGC,IAAI,IAAIC,QAAQ,IAAI;AACpC,SAAOA,QAAQ,CAAC;AACZC,IAAAA,IAAI,EAAE,MADM;AAEZC,IAAAA,KAAK,EAAEH;AAFK,GAAD,CAAf;AAIH,CALM;AAOP,OAAO,MAAMI,WAAW,GAAG,MAAM,MAAMH,QAAN,IAAkB;AAC/C,QAAMI,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAWC,QAAQ,CAACC,IAAT,GAAgB,cAA3B,CAAvB;AACAV,EAAAA,OAAO,CAACW,MAAR,CAAe,MAAf;AACA,SAAOR,QAAQ,CAAC;AACZC,IAAAA,IAAI,EAAE,aADM;AAEZC,IAAAA,KAAK,EAAEE,QAAQ,CAACL;AAFJ,GAAD,CAAf;AAIH,CAPM;AASP,OAAO,MAAMU,MAAM,GAAGV,IAAI,IAAI,MAAMC,QAAN,IAAkB;AAC5C,SAAOA,QAAQ,CAAC;AACZC,IAAAA,IAAI,EAAE,QADM;AAEZC,IAAAA,KAAK,EAAEE;AAFK,GAAD,CAAf;AAIH,CALM","sourcesContent":["import axios from \"axios\";\nimport config from \"../config\";\nimport Cookies from \"js-cookie\";\n\nexport const Auth = data => dispatch => {\n    return dispatch({\n        type: \"Auth\",\n        value: data\n    });\n};\n\nexport const AccessToken = () => async dispatch => {\n    const response = await axios.post(location.href + \"spotify/auth\");\n    Cookies.remove(\"code\");\n    return dispatch({\n        type: \"AccessToken\",\n        value: response.data\n    });\n};\n\nexport const UserMe = data => async dispatch => {\n    return dispatch({\n        type: \"UserMe\",\n        value: response\n    });\n};\n"]},"metadata":{},"sourceType":"module"}