{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\";\nimport { SetAccessToken } from \"../actions/Spotify\";\nimport axios from \"axios\";\nimport { access } from \"fs\";\n\nvar AccessToken =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AccessToken, _React$Component);\n\n  function AccessToken() {\n    _classCallCheck(this, AccessToken);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AccessToken).apply(this, arguments));\n  }\n\n  _createClass(AccessToken, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          dispatch = _this$props.dispatch,\n          accessToken = _this$props.accessToken,\n          at = _this$props.at;\n      setInterval(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var accessTokenTmp, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                accessTokenTmp = false;\n                console.log(accessToken);\n                _context.next = 4;\n                return axios.post(\"\".concat(location.href, \"spotify/auth?code=\").concat(accessToken.refresh_token));\n\n              case 4:\n                response = _context.sent;\n\n                if (response.status == 200 && response.data) {\n                  accessTokenTmp = response.data;\n                }\n\n                dispatch(SetAccessToken(accessTokenTmp));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })), at.expires_in);\n      dispatch(SetAccessToken(at));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return AccessToken;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    accessToken: state.Spotify.accessToken\n  };\n}\n\nexport default connect(mapStateToProps)(AccessToken);","map":{"version":3,"sources":["/Users/agustinquetto/Documents/GitHub/courseit-musikit/components/AccessToken.js"],"names":["React","connect","Link","SetAccessToken","axios","access","AccessToken","props","dispatch","accessToken","at","setInterval","accessTokenTmp","console","log","post","location","href","refresh_token","response","status","data","expires_in","Component","mapStateToProps","state","Spotify"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,IAAvB;;IAEMC,W;;;;;;;;;;;;;wCACkB;AAAA,wBACsB,KAAKC,KAD3B;AAAA,UACRC,QADQ,eACRA,QADQ;AAAA,UACEC,WADF,eACEA,WADF;AAAA,UACeC,EADf,eACeA,EADf;AAEhBC,MAAAA,WAAW;AAAA;AAAA;AAAA;AAAA,+BAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACJC,gBAAAA,cADI,GACa,KADb;AAERC,gBAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AAFQ;AAAA,uBAGeL,KAAK,CAACW,IAAN,WAChBC,QAAQ,CAACC,IADO,+BACkBR,WAAW,CAACS,aAD9B,EAHf;;AAAA;AAGFC,gBAAAA,QAHE;;AAMR,oBAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACE,IAAvC,EAA6C;AACzCT,kBAAAA,cAAc,GAAGO,QAAQ,CAACE,IAA1B;AACH;;AACDb,gBAAAA,QAAQ,CAACL,cAAc,CAACS,cAAD,CAAf,CAAR;;AATQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD,IAURF,EAAE,CAACY,UAVK,CAAX;AAWAd,MAAAA,QAAQ,CAACL,cAAc,CAACO,EAAD,CAAf,CAAR;AACH;;;6BACQ;AACL,aAAO,IAAP;AACH;;;;EAlBqBV,KAAK,CAACuB,S;;AAqBhC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHhB,IAAAA,WAAW,EAAEgB,KAAK,CAACC,OAAN,CAAcjB;AADxB,GAAP;AAGH;;AAED,eAAeR,OAAO,CAACuB,eAAD,CAAP,CAAyBlB,WAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\";\nimport { SetAccessToken } from \"../actions/Spotify\";\nimport axios from \"axios\";\nimport { access } from \"fs\";\n\nclass AccessToken extends React.Component {\n    componentDidMount() {\n        const { dispatch, accessToken, at } = this.props;\n        setInterval(async () => {\n            let accessTokenTmp = false;\n            console.log(accessToken);\n            const response = await axios.post(\n                `${location.href}spotify/auth?code=${accessToken.refresh_token}`\n            );\n            if (response.status == 200 && response.data) {\n                accessTokenTmp = response.data;\n            }\n            dispatch(SetAccessToken(accessTokenTmp));\n        }, at.expires_in);\n        dispatch(SetAccessToken(at));\n    }\n    render() {\n        return null;\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        accessToken: state.Spotify.accessToken\n    };\n}\n\nexport default connect(mapStateToProps)(AccessToken);\n"]},"metadata":{},"sourceType":"module"}