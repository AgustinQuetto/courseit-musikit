{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport App from \"next/app\";\nimport Menu from \"../components/menu\";\nimport Container from \"../components/Container\";\nimport Footer from \"../components/footer\";\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { initializeStore } from \"../store\";\nimport { Provider } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport withReduxStore from \"../with-redux-store\";\nimport parseCookies from \"parse-cookies.js\";\nimport \"../styles/_app.scss\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport config from \"../config\";\n\nclass CustomApp extends App {\n  static async getInitialProps({\n    ctx\n  }) {\n    const res = ctx.res ? ctx.res : false;\n    const spotifyAuth = res.spotifyAuth || config.spotifyAuth;\n    const query = res.req ? res.req.query : {};\n    const cookies = res.req ? res.req.cookies : {};\n    return {\n      query,\n      cookies,\n      spotifyAuth\n    };\n  }\n\n  componentDidMount() {\n    const query = this.props;\n    console.log(query);\n    /*  if (!Cookies.get(\"code\") && !query.code) {\n        Router.replace(\"/\");\n        return;\n    }\n    if (code) {\n        Cookies.set(\"code\", code);\n        Router.replace(location.pathname);\n    } */\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore,\n      router\n    } = this.props;\n    return __jsx(Provider, {\n      store: reduxStore\n    }, __jsx(Head, {\n      key: \"head\"\n    }, __jsx(\"title\", null, \"Musikit\")), __jsx(\"div\", {\n      className: \"flex-container\"\n    }, __jsx(Menu, null), __jsx(Container, null, __jsx(Component, pageProps))), __jsx(Footer, null));\n  }\n\n}\n\nexport default withReduxStore(CustomApp);","map":{"version":3,"sources":["/Users/agustinquetto/Documents/GitHub/courseit-musikit/pages/_app.js"],"names":["React","App","Menu","Container","Footer","Head","Router","Cookies","initializeStore","Provider","connect","withReduxStore","parseCookies","_","axios","config","CustomApp","getInitialProps","ctx","res","spotifyAuth","query","req","cookies","componentDidMount","props","console","log","render","Component","pageProps","reduxStore","router"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,eAAT,QAAgC,UAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,OAAO,qBAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,SAAN,SAAwBf,GAAxB,CAA4B;AACxB,eAAagB,eAAb,CAA6B;AAAEC,IAAAA;AAAF,GAA7B,EAAsC;AAClC,UAAMC,GAAG,GAAGD,GAAG,CAACC,GAAJ,GAAUD,GAAG,CAACC,GAAd,GAAoB,KAAhC;AACA,UAAMC,WAAW,GAAGD,GAAG,CAACC,WAAJ,IAAmBL,MAAM,CAACK,WAA9C;AACA,UAAMC,KAAK,GAAGF,GAAG,CAACG,GAAJ,GAAUH,GAAG,CAACG,GAAJ,CAAQD,KAAlB,GAA0B,EAAxC;AACA,UAAME,OAAO,GAAGJ,GAAG,CAACG,GAAJ,GAAUH,GAAG,CAACG,GAAJ,CAAQC,OAAlB,GAA4B,EAA5C;AAEA,WAAO;AAAEF,MAAAA,KAAF;AAASE,MAAAA,OAAT;AAAkBH,MAAAA;AAAlB,KAAP;AACH;;AAEDI,EAAAA,iBAAiB,GAAG;AAChB,UAAMH,KAAK,GAAG,KAAKI,KAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA;;;;;;;;AAQH;;AACDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA,UAAxB;AAAoCC,MAAAA;AAApC,QAA+C,KAAKP,KAA1D;AACA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEM;AAAjB,OACI,MAAC,IAAD;AAAM,MAAA,GAAG,EAAC;AAAV,OACI,+BADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,MAAC,IAAD,OADJ,EAEI,MAAC,SAAD,QACI,MAAC,SAAD,EAAeD,SAAf,CADJ,CAFJ,CAJJ,EAUI,MAAC,MAAD,OAVJ,CADJ;AAcH;;AAtCuB;;AAyC5B,eAAenB,cAAc,CAACK,SAAD,CAA7B","sourcesContent":["import React from \"react\";\nimport App from \"next/app\";\nimport Menu from \"../components/menu\";\nimport Container from \"../components/Container\";\nimport Footer from \"../components/footer\";\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { initializeStore } from \"../store\";\nimport { Provider } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport withReduxStore from \"../with-redux-store\";\nimport parseCookies from \"parse-cookies.js\";\n\nimport \"../styles/_app.scss\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport config from \"../config\";\n\nclass CustomApp extends App {\n    static async getInitialProps({ ctx }) {\n        const res = ctx.res ? ctx.res : false;\n        const spotifyAuth = res.spotifyAuth || config.spotifyAuth;\n        const query = res.req ? res.req.query : {};\n        const cookies = res.req ? res.req.cookies : {};\n\n        return { query, cookies, spotifyAuth };\n    }\n\n    componentDidMount() {\n        const query = this.props;\n        console.log(query);\n        /*  if (!Cookies.get(\"code\") && !query.code) {\n            Router.replace(\"/\");\n            return;\n        }\n        if (code) {\n            Cookies.set(\"code\", code);\n            Router.replace(location.pathname);\n        } */\n    }\n    render() {\n        const { Component, pageProps, reduxStore, router } = this.props;\n        return (\n            <Provider store={reduxStore}>\n                <Head key=\"head\">\n                    <title>Musikit</title>\n                </Head>\n                <div className=\"flex-container\">\n                    <Menu />\n                    <Container>\n                        <Component {...pageProps} />\n                    </Container>\n                </div>\n                <Footer />\n            </Provider>\n        );\n    }\n}\n\nexport default withReduxStore(CustomApp);\n"]},"metadata":{},"sourceType":"module"}