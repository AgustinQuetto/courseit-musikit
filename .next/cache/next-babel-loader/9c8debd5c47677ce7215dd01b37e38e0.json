{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport App from \"next/app\";\nimport Menu from \"../components/menu\";\nimport Container from \"../components/Container\";\nimport Footer from \"../components/footer\";\nimport AccessToken from \"../components/AccessToken\";\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport { Provider } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport withReduxStore from \"../with-redux-store\";\nimport queryString from \"query-string\";\nimport \"../styles/_app.scss\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport config from \"../config\";\n\nclass CustomApp extends App {\n  static async getInitialProps({\n    ctx\n  }) {\n    const res = ctx.res ? ctx.res : false;\n    const spotifyAuth = res.spotifyAuth || config.spotifyAuth;\n    const query = res.req ? res.req.query : {};\n    const host = res.req ? res.req.headers.host : \"\";\n    let authed = false;\n    let accessToken = {};\n\n    if (query.code && host) {\n      try {\n        const response = await axios.post(`http://${host}/spotify/auth?${queryString.stringify(query)}`);\n\n        if (response.status == 200 && response.data) {\n          authed = true;\n          accessToken = response.data;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    return {\n      query,\n      spotifyAuth,\n      authed: authed,\n      at: accessToken\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      enabled: false\n    };\n  }\n\n  componentDidMount() {\n    Router.replace(location.pathname);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore,\n      at\n    } = this.props;\n    const enabled = !!_.get(reduxStore.getState(), \"Spotify.access_token.access_token\");\n    console.log(_.get(reduxStore.getState(), \"Spotify.accessToken\"));\n    return __jsx(Provider, {\n      store: reduxStore\n    }, __jsx(Head, {\n      key: \"head\"\n    }, __jsx(\"title\", null, \"Musikit\")), enabled ? __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"flex-container\"\n    }, __jsx(Menu, null), __jsx(Container, null, __jsx(Component, pageProps))), __jsx(Footer, null)) : at ? __jsx(AccessToken, {\n      at: at\n    }) : null);\n  }\n\n}\n\nexport default withReduxStore(CustomApp);","map":{"version":3,"sources":["/Users/agustinquetto/Documents/GitHub/courseit-musikit/pages/_app.js"],"names":["React","App","Menu","Container","Footer","AccessToken","Head","Router","Provider","connect","withReduxStore","queryString","_","axios","config","CustomApp","getInitialProps","ctx","res","spotifyAuth","query","req","host","headers","authed","accessToken","code","response","post","stringify","status","data","e","console","log","at","constructor","props","state","enabled","componentDidMount","replace","location","pathname","render","Component","pageProps","reduxStore","get","getState"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport App from \"next/app\";\nimport Menu from \"../components/menu\";\nimport Container from \"../components/Container\";\nimport Footer from \"../components/footer\";\nimport AccessToken from \"../components/AccessToken\";\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport { Provider } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport withReduxStore from \"../with-redux-store\";\nimport queryString from \"query-string\";\n\nimport \"../styles/_app.scss\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport config from \"../config\";\n\nclass CustomApp extends App {\n    static async getInitialProps({ ctx }) {\n        const res = ctx.res ? ctx.res : false;\n        const spotifyAuth = res.spotifyAuth || config.spotifyAuth;\n        const query = res.req ? res.req.query : {};\n        const host = res.req ? res.req.headers.host : \"\";\n\n        let authed = false;\n        let accessToken = {};\n        if (query.code && host) {\n            try {\n                const response = await axios.post(\n                    `http://${host}/spotify/auth?${queryString.stringify(\n                        query\n                    )}`\n                );\n                if (response.status == 200 && response.data) {\n                    authed = true;\n                    accessToken = response.data;\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n\n        return { query, spotifyAuth, authed: authed, at: accessToken };\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            enabled: false\n        };\n    }\n\n    componentDidMount() {\n        Router.replace(location.pathname);\n    }\n\n    render() {\n        const { Component, pageProps, reduxStore, at } = this.props;\n        const enabled = !!_.get(\n            reduxStore.getState(),\n            \"Spotify.access_token.access_token\"\n        );\n        console.log(_.get(reduxStore.getState(), \"Spotify.accessToken\"));\n        return (\n            <Provider store={reduxStore}>\n                <Head key=\"head\">\n                    <title>Musikit</title>\n                </Head>\n                {enabled ? (\n                    <React.Fragment>\n                        <div className=\"flex-container\">\n                            <Menu />\n                            <Container>\n                                <Component {...pageProps} />\n                            </Container>\n                        </div>\n                        <Footer />\n                    </React.Fragment>\n                ) : at ? (\n                    <AccessToken at={at} />\n                ) : null}\n            </Provider>\n        );\n    }\n}\n\nexport default withReduxStore(CustomApp);\n"]},"metadata":{},"sourceType":"module"}